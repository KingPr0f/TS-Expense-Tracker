import React from "react";
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
} from "recharts";
import { Expense } from "../types";
import dayjs from "dayjs";

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤
 * –ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç –≤—Å–µ —Ç—Ä–∞—Ç—ã –ø–æ –¥–∞—Ç–µ –∏ —Å—Ç—Ä–æ–∏—Ç –≥—Ä–∞—Ñ–∏–∫ "–¥–∞—Ç–∞ ‚Äî —Å—É–º–º–∞"
 */
interface Props {
  expenses: Expense[];
}

const ExpenseChart: React.FC<Props> = ({ expenses }) => {
  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ
  const grouped = expenses.reduce((acc, e) => {
    const date = e.date || dayjs().format("YYYY-MM-DD");
    acc[date] = (acc[date] || 0) + e.amount;
    return acc;
  }, {} as Record<string, number>);

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è Recharts
  const data = Object.keys(grouped)
    .sort()
    .map((date) => ({
      date: dayjs(date).format("DD.MM"),
      amount: grouped[date],
    }));

  if (data.length === 0) {
    return <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>;
  }

  return (
    <div style={{ width: "100%", height: 400 }}>
      <h3>üìä –ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –¥–Ω—è–º</h3>
      <ResponsiveContainer>
        <LineChart data={data} margin={{ top: 20, right: 30, left: 0, bottom: 0 }}>
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="date" />
          <YAxis />
          <Tooltip formatter={(v) => `${v} ‚ÇΩ`} labelFormatter={(v) => `–î–∞—Ç–∞: ${v}`} />
          <Line type="monotone" dataKey="amount" stroke="#1890ff" strokeWidth={2} />
        </LineChart>
      </ResponsiveContainer>
    </div>
  );
};

export default ExpenseChart;

console.log("ExpenseChart module loaded");